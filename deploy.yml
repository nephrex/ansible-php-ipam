---
- hosts: localhost
  become: yes
  gather_facts: true

  vars:
   ipam_version: 1.5
   scan_minutes: 15
   backup_retention_days: 30
   timezone: Australia/Sydney
   db_name: phpipam
   db_account: phpipam
   db_socket: /var/lib/mysql/mysql.sock
   ipam_path: /var/www/html/ipam
   backup_user: ipam-backup
   backup_path: /opt/ipam-backups
   fpm_socket: /run/php-fpm/www.sock
   ansible_python_interpreter: /usr/bin/python3

  tasks:
    - set_fact:
        db_password: "{{ lookup('password', '/dev/null length=12 chars=ascii_letters,digits') }}"
        db_root_password: "{{ lookup('password', '/dev/null length=12 chars=ascii_letters,digits') }}"

    - name: Install Prerequisites...
      yum:
        name:
          [
            mariadb-server,
            nginx,
            php-curl,
            php-fpm,
            php-gd,
            php-gettext,
            php-gmp,
            php-intl,
            php-json,
            php-ldap,
            php-mbstring,
            php-mysqlnd,
            php-pear,
            php-recode,
            php-xmlrpc,
            php-xml
          ]
        update_cache: true
        state: present
   
    - name: Install Python MYSQL Module...
      pip:
        name: pymysql

    - name: Install PHP-IPAM...
      git:
       repo: https://github.com/phpipam/phpipam.git
       dest:  "{{ipam_path}}"
       version: "{{ipam_version}}"

    - name: Copy Certificates...
      template:
       src: certs/ipam.{{item}}
       dest: /etc/ssl/ipam.{{item}}
       owner: nginx
       group: nginx
       mode: 0660
      with_items:
       - crt
       - key
       
    - name: Copy Cron Job...
      template:
       src: templates/ipam.j2
       dest: /etc/cron.d/ipam
       mode: 0600

    - name: Import NGINX Config File...
      template:
       src: templates/nginx.j2
       dest: /etc/nginx/nginx.conf

    - name: Set PHP-FPM Pool Timezone...
      lineinfile:
        path: /etc/php-fpm.d/www.conf
        line: "php_admin_value[date.timezone] = {{timezone}}"

    - name: Copy IPAM Config...
      copy:
        src: "{{ipam_path}}/config.dist.php"
        dest: "{{ipam_path}}/config.php"
  
    - name: Update IPAM Config File...
      replace:
        path: "{{ipam_path}}/config.php"
        regexp: "phpipamadmin"
        replace: "{{db_password}}"

    - name: Create Backup Account...
      user:
        name: "{{backup_user}}"
        password: "!"
        shell: /sbin/nologin

    - name: Update Folder Permissions... 
      file:
        group: "{{item.owner}}"
        owner: "{{item.owner}}"
        recurse: "{{item.recurse}}"
        path: "{{item.path}}"
        state: directory
      with_items:
        - {"owner": "nginx", "recurse": yes, "path": "{{ipam_path}}", "mode": 770}
        - {"owner": "{{backup_user}}", "recurse": no, "path": "{{backup_path}}", "mode": 770}

    - name: Firewall Permit HTTP(S)...
      firewalld:
        service: "{{item}}"
        permanent: yes
        immediate: yes
        state: enabled    
      with_items:
        - https
        - http

    - name: Set SELinux Booleans...
      command: "setsebool -P {{item}} on"
      with_items:
        - httpd_can_network_connect

    - name: Start Services...
      service:
        name: "{{item}}"
        state: restarted
        enabled: yes
      with_items:
        - nginx
        - php-fpm
        - mariadb

    - name: Create Database...
      mysql_db:
        login_user: root
        login_unix_socket: "{{db_socket}}"
        name: "{{db_name}}"
        state: present

    - name: Import Database...
      mysql_db:
        login_user: root
        login_unix_socket: "{{db_socket}}"
        name: "{{db_name}}"
        state: import
        target: "{{ipam_path}}/db/SCHEMA.sql"

    - name: Create Database User...
      mysql_user:
        login_user: root
        login_unix_socket: "{{db_socket}}"
        state: present
        name: "{{db_account}}"
        password: "{{db_password}}"
        priv: "{{db_name}}.*:ALL"
        state: present
        sql_log_bin: no
        
    - name: Set MariaDB Root Password...
      mysql_user:
        login_user: root
        login_unix_socket: "{{db_socket}}"
        name: "root"
        host_all: yes
        password: "{{db_root_password}}"
        state: present
        
    - name: Show MariaDB Root Password...
      debug:
        msg: "{{db_root_password}}"

